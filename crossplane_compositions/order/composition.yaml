apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: order.pauloponciano.pro
spec: 
  compositeTypeRef:
    apiVersion: api.pauloponciano.pro/v1alpha1
    kind: XCustomOrder
  patchSets:
    - name: common-fields
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.providerConfigName
          toFieldPath: spec.providerConfigRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.region
          toFieldPath: spec.forProvider.region
  resources:
## API GATEWAY
    - name: order-api-gateway
      base:
        apiVersion: apigateway.aws.upbound.io/v1beta1
        kind: RestAPI
        metadata:
          name: order-api
          labels:
            app.kubernetes.io/created-by: crossplane
            type: api-order
        spec: 
          forProvider:
            name: to-be-patched
            region: to-be-patched
      patches:
        - type: PatchSet
          patchSetName: common-fields 
        - type: FromCompositeFieldPath
          fromFieldPath: metadata.name
          toFieldPath: spec.forProvider.name
          transforms:
            - type: string
              string:
                fmt: "%s-restapi"
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
    - name: order-api-gateway-resource
      base:
        apiVersion: apigateway.aws.upbound.io/v1beta1
        kind: Resource
        metadata:
          name: order-api-resource
          labels:
            app.kubernetes.io/created-by: crossplane
            type: order-resource
        spec: 
          forProvider:
            region: to-be-patched
            pathPart: order
            parentIdSelector:
              matchLabels:
                type: api-order
            restApiIdSelector:
              matchLabels:
                type: api-order
      patches:
        - type: PatchSet
          patchSetName: common-fields
    - name: order-api-method-post
      base:
        apiVersion: apigateway.aws.upbound.io/v1beta1
        kind: Method
        metadata:
          name: order-api-method-post
          labels:
            app.kubernetes.io/created-by: crossplane
            type: api-order-method-post
        spec: 
          forProvider:
            region: to-be-patched
            httpMethod: POST
            authorization: NONE
            restApiIdSelector:
              matchControllerRef: true
              matchLabels:
                type: api-order
            resourceIdSelector:
              matchLabels: 
                type: order-resource
      patches:
        - type: PatchSet
          patchSetName: common-fields
    - name: api-order-lambda-integration
      base:
        apiVersion: apigateway.aws.upbound.io/v1beta1
        kind: Integration
        metadata:
          name: api-order-lambda-integration
          labels:
            app.kubernetes.io/created-by: crossplane
            type: api-order-lambda-integration
        spec: 
          forProvider:
            region: to-be-patched
            type: AWS_PROXY
            restApiIdSelector:
              matchControllerRef: true
              matchLabels:
                type: api-order
            uriSelector:
              matchLabels:
                type: lambda-order
            integrationHttpMethod: POST
            resourceIdSelector:
              matchLabels:
                type: order-resource
            httpMethodSelector:
              matchLabels: 
                type: api-order-method-post        
      patches:
        - type: PatchSet
          patchSetName: common-fields
    - name: api-order-deployment
      base:
        apiVersion: apigateway.aws.upbound.io/v1beta1
        kind: Deployment
        metadata:
          name: api-order-deployment
          labels:
            app.kubernetes.io/created-by: crossplane
            type: api-order-deployment
        spec: 
          forProvider:
            region: to-be-patched
            restApiIdSelector:
              matchControllerRef: true
              matchLabels:
                type: api-order
            stageName: Stage
            stageDescription: Non-Production  
          writeConnectionSecretToRef:
            name: invokeurl-apigateway
            namespace: crossplane-system            
      patches:
        - type: PatchSet
          patchSetName: common-fields
## LAMBDA IAM
    - name: lambda-order-custom-policy
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Policy
        metadata:
          name: lambda-order-custom-policy
          labels:
            type: lambda-order-custom-policy
        spec:
          forProvider:
            policy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents",
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords",
                          "events:PutEvents",
                          "s3:GetObject"
                      ],
                      "Resource": "*"
                  }
                ]
              }
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
    - name: function-role
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: Role
        metadata:
          name: lambda-order-role
          labels:
            app.kubernetes.io/created-by: crossplane
            type: lambda-order-role
        spec:
          forProvider:
            assumeRolePolicy: |
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.functionRoleArn
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.id
          toFieldPath: status.functionRoleName
        - type: FromCompositeFieldPath
          fromFieldPath: spec.permissionsBoundaryArn
          toFieldPath: spec.forProvider.permissionsBoundary
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
    - name: lambda-basic-policy-attachment
      base:
        apiVersion: iam.aws.upbound.io/v1beta1
        kind: RolePolicyAttachment
        spec:
          forProvider:
            policyArnSelector:
              matchLabels:
                type: lambda-order-custom-policy
            roleSelector:
              matchControllerRef: true
              matchLabels:
                type: lambda-order-role
      patches:
        - type: PatchSet
          patchSetName: common-fields
## LAMBDA FUNCTION
    - name: lambda-order
      base:
        apiVersion: lambda.aws.upbound.io/v1beta1
        kind: Function
        metadata:
          name: lambda-order
          annotations:
            meta.upbound.io/example-id: lambda/v1beta1/function
            uptest.upbound.io/timeout: "3600"
          labels:
            type: lambda-order
        spec:
          forProvider:
            handler: handler.putOrder
            packageType: Zip
            region: to-be-patched
            roleSelector:
              matchControllerRef: true
              matchLabels:
                type: lambda-order-role
            runtime: nodejs14.x
            s3Bucket: pauloponciano-lambda-order
            s3Key: lambda_order.zip
            timeout: 60
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
    - name: lambda-consumer
      base:
        apiVersion: lambda.aws.upbound.io/v1beta1
        kind: Function
        metadata:
          name: lambda-consumer
          annotations:
            meta.upbound.io/example-id: lambda/v1beta1/function
            uptest.upbound.io/timeout: "3600"
          labels:
            type: lambda-consumer
        spec:
          forProvider:
            handler: handler.calabresoPizza
            packageType: Zip
            region: to-be-patched
            roleSelector:
              matchControllerRef: true
              matchLabels:
                type: lambda-order-role
            runtime: nodejs14.x
            s3Bucket: pauloponciano-lambda-order
            s3Key: lambda_consumer.zip
            timeout: 60
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: ToCompositeFieldPath
          fromFieldPath: status.atProvider.arn
          toFieldPath: status.functionArn
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
    - name: lambda-order-permission
      base:
        apiVersion: lambda.aws.upbound.io/v1beta1
        kind: Permission
        metadata:
          name: lambda-order-permission
          labels:
            type: lambda-order-permission
        spec:
          forProvider:
            region: to-be-patched
            action: lambda:InvokeFunction
            functionNameSelector:
              matchLabels:
                type: lambda-order
            principal: apigateway.amazonaws.com
            statementId: AllowExecutionFromApiGateway
            sourceArn: arn:aws:execute-api:us-east-1:310240692520:*/*/POST/order #ExecutionArn
      patches:
        - type: PatchSet
          patchSetName: common-fields
    - name: lambda-consumer-permission
      base:
        apiVersion: lambda.aws.upbound.io/v1beta1
        kind: Permission
        metadata:
          name: lambda-consumer-permission
          labels:
            type: lambda-consumer-permission
        spec:
          forProvider:
            region: to-be-patched
            action: lambda:InvokeFunction
            functionNameSelector:
              matchLabels:
                type: lambda-consumer
            principal: events.amazonaws.com
            statementId: AllowExecutionFromEventBridge
            sourceArn: arn:aws:events:us-east-1:310240692520:rule/* #RuleArn
      patches:
        - type: PatchSet
          patchSetName: common-fields
## EVENT
    - name: calabresoPizza-event-rule
      base:
        apiVersion: cloudwatchevents.aws.upbound.io/v1beta1
        kind: Rule
        metadata:
          name: calabresoPizza-event-rule
          labels:
            type: calabresoPizza-event-rule
        spec:
          forProvider:
            region: to-be-patched
            eventBusName: default
            isEnabled: true
            eventPattern: |
              {
                "detail-type": ["order"],
                "source": ["custom.orderManager"],
                "detail": {
                  "restaurantName": ["calabresoPizza"]
                }
              }
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: spec.resourceConfig.tags
          toFieldPath: spec.forProvider.tags
          policy:
            mergeOptions:
              keepMapValues: true
    - name: calabresoPizza-event-rule-target
      base:
        apiVersion: cloudwatchevents.aws.upbound.io/v1beta1
        kind: Target
        metadata:
          name: calabresoPizza-event-rule-target
          labels:
            type: calabresoPizza-event-rule-target
        spec:
          forProvider:
            arn: to-be-patched
            eventBusName: default
            ruleSelector:
              matchLabels:
                type: calabresoPizza-event-rule
            region: to-be-patched
            targetId: lambda-consumer
      patches:
        - type: PatchSet
          patchSetName: common-fields
        - type: FromCompositeFieldPath
          fromFieldPath: status.functionArn
          toFieldPath: spec.forProvider.arn